# this workflow job is used to automate provision of servers and resources
# for Google Cloud Project with terraform
# author: Yann Mulonda
name: 'Terraform'
on:
  push:
    branches:
    - 'tes'
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_VAR_bucket_name: 'samstorage2'
      TF_VAR_project_id: 'taibi-samira' # your project id
      TF_VAR_region: 'europe-west1'
      TF_VAR_zone: 'europe-west1-b'
    permissions:
      contents: 'read'
      id-token: 'write'

    #environment: production
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    # On push to terraform branch, build or change infrastructure according to Terraform configuration files
    if: github.ref == 'refs/heads/test' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

    #   - name: 'Google auth'
    #     id: 'auth'
    #     uses: 'google-github-actions/auth@v1'
    #     with:
    #         create_credentials_file: 'false'
    #         workload_identity_provider: '{{ secrets.WIF_PROVIDER }}'
    #         service_account: '{{ secrets.WIF_SERVICE_ACCOUNT }}'

      - name: 'Authenticate to Google Cloud'
        id: auth2
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{secrets.GKE_SA_KEY}}

      # - name: 'Storing SA Key to json file'
      #   id: sa-config
      #   run: echo {{ secrets.GKE_SA_KEY }} > credentials.json

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      #with:
      #  cli_config_credentials_token: {{ secrets.TF_API_TOKEN }}
    
    #   - name: terraform destroy
    #     uses: dflook/terraform-destroy@v1
    #     with:
    #       path: ./test/terraform
    #       workspace: ${{ github.ref }}

      - name: Terraform Init
        id: tf_init
        working-directory: ./test/terraform
        run: terraform init -backend-config="bucket=samsambucket"


      - name: Terraform Plan
        id: terraform_plan
        working-directory: ./test/terraform
        run: terraform plan

      - name: Terraform Apply
        id: tf_apply
        working-directory: ./test/terraform
        run: terraform apply -auto-approve

    #   - name: Terraform Destroy
    #     # If any commit message in your push or the HEAD commit of your PR 
    #     # contains the strings [detruire] -- then terraform Destry step will run
    #     if: "contains(github.event.commits[0].message, '[destroy]')"
    #     # terraform plan -destroy
    #     run: |
    #         terraform apply -destroy -auto-approve